name: Project Status & Health Check

on:
  schedule:
    # Ejecutar cada 6 horas
    - cron: "0 */6 * * *"
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  flutter-analysis:
    name: Flutter Code Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.0"
          channel: "stable"

      - name: Get dependencies
        working-directory: Frontend/turneros_app
        run: flutter pub get

      - name: Analyze code
        working-directory: Frontend/turneros_app
        run: flutter analyze

      - name: Run tests
        working-directory: Frontend/turneros_app
        run: flutter test

  python-analysis:
    name: Python Backend Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        working-directory: Backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  hosting-health-check:
    name: Firebase Hosting Health Check
    runs-on: ubuntu-latest
    steps:
      - name: Check website availability
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://turneros.web.app/)
          if [ $response -eq 200 ]; then
            echo "✅ Website is accessible (HTTP $response)"
          else
            echo "❌ Website is not accessible (HTTP $response)"
            exit 1
          fi

      - name: Check website performance
        run: |
          # Verificar tiempo de respuesta
          time=$(curl -o /dev/null -s -w "%{time_total}" https://turneros.web.app/)
          echo "⏱️ Response time: $time seconds"

          # Si el tiempo es mayor a 5 segundos, mostrar advertencia
          if (( $(echo "$time > 5.0" | bc -l) )); then
            echo "⚠️ Warning: Website response time is slow"
          fi

  project-metrics:
    name: Project Metrics
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Count lines of code
        run: |
          echo "📊 Project Statistics:"
          echo "Frontend Dart files: $(find Frontend/turneros_app/lib -name "*.dart" | wc -l)"
          echo "Backend Python files: $(find Backend -name "*.py" | wc -l)"
          echo "Total lines in Dart: $(find Frontend/turneros_app/lib -name "*.dart" -exec cat {} \; | wc -l)"
          echo "Total lines in Python: $(find Backend -name "*.py" -exec cat {} \; | wc -l)"

      - name: Check dependencies
        working-directory: Frontend/turneros_app
        run: |
          echo "📦 Flutter Dependencies:"
          flutter pub deps --style=compact

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run security scan with CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python, javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        if: always()
        with:
          category: "/language:python"
        continue-on-error: true

  status-badge:
    name: Update Status Badge
    runs-on: ubuntu-latest
    needs:
      [flutter-analysis, python-analysis, hosting-health-check, project-metrics]
    if: always()
    steps:
      - name: Create status summary
        run: |
          if [ "${{ needs.flutter-analysis.result }}" == "success" ] && \
             [ "${{ needs.python-analysis.result }}" == "success" ] && \
             [ "${{ needs.hosting-health-check.result }}" == "success" ]; then
            echo "🟢 All systems operational" >> $GITHUB_STEP_SUMMARY
          else
            echo "🔴 Some issues detected" >> $GITHUB_STEP_SUMMARY
          fi

          echo "### Project Status Report" >> $GITHUB_STEP_SUMMARY
          echo "- Flutter Analysis: ${{ needs.flutter-analysis.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Python Analysis: ${{ needs.python-analysis.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Hosting Health: ${{ needs.hosting-health-check.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Timestamp: $(date)" >> $GITHUB_STEP_SUMMARY
